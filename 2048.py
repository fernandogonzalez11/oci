# -*- coding: utf-8 -*-
"""2048.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_kndyU2wVG2gceWIVPG67J_YYKJtyHjJ
"""

import random
# from IPython.display import clear_output
from os import system
def clear_output():
  system('clear')

"""# `Print board`"""

def printBoard():
  for i in range(n):
    print(matriz[i])

"""# `Fill`"""

def fill():
  for i in range(n):
    matriz.append([])
    for j in range(n):
      matriz[i].append(0)
  for i in range(2):
    random2()

  printBoard()

"""# `Random 2 in the board`"""

def random2():
  fila = random.randint(0, n-1)
  columna = random.randint(0, n-1)

  if (matriz[fila][columna] == 0):
    matriz[fila][columna] = 2
  else:
    random2()

"""# `Izquierda`"""

""" def izq():
  for fila in range(n):
    for columna in range(1, n):
      if (matriz[fila][columna] != 0):
        while (matriz[fila][columna-1] == 0):
          moveThroughRow(fila, columna, columna-1) """

def izq():
  for fila in range(n):
    for columna in range(1, n):
      if (matriz[fila][columna] != 0):
        columna_temp = columna
        while (columna_temp != 0):
          actual = matriz[fila][columna_temp]
          anterior = matriz[fila][columna_temp-1]
          if (anterior == 0):
            moveThroughRow(fila, columna_temp, columna_temp-1)
          elif (anterior == actual):
            moveThroughRow(fila, columna_temp, columna_temp-1, 2 * actual)
          columna_temp -= 1

  random2()
  printBoard()

"""# `Derecha`"""

""" def der():
  for fila in range(n):
    for columna in range(0, n-1):
      if (matriz[fila][columna] != 0):
        while (matriz[fila][columna+1] == 0):
          moveThroughRow(fila, columna, columna+1) """

def der():
  for fila in range(n):
    for columna in range(n-2, -1, -1):
      if (matriz[fila][columna] != 0):
        columna_temp = columna
        while (columna_temp != n-1):
          actual = matriz[fila][columna_temp]
          siguiente = matriz[fila][columna_temp+1]
          if (siguiente == 0):
            moveThroughRow(fila, columna_temp, columna_temp+1)
          elif (siguiente == actual):
            moveThroughRow(fila, columna_temp, columna_temp+1, 2 * actual)
          columna_temp += 1

  random2()
  printBoard()

"""# `Arriba`


"""

def arriba():
  for columna in range(n):
    for fila in range(1, n):
      if (matriz[fila][columna] != 0):
        fila_temp = fila
        while (fila_temp != 0):
          actual = matriz[fila_temp][columna]
          anterior = matriz[fila_temp-1][columna]
          if (anterior == 0):
            moveThroughColumn(columna, fila_temp, fila_temp-1)
          elif (anterior == actual):
            moveThroughColumn(columna, fila_temp, fila_temp-1, 2 * actual)
          fila_temp -= 1
          
  random2()
  printBoard()

"""# `Abajo`"""

def abajo():
  for columna in range(n):
    for fila in range(n-2, -1, -1):
      if (matriz[fila][columna] != 0):
        fila_temp = fila
        while (fila_temp != n-1):
          actual = matriz[fila_temp][columna]
          siguiente = matriz[fila_temp+1][columna]
          if (siguiente == 0):
            moveThroughColumn(columna, fila_temp, fila_temp+1)
          elif (siguiente == actual):
            moveThroughColumn(columna, fila_temp, fila_temp+1, 2 * actual)
          fila_temp += 1
          
  random2()
  printBoard()

def checkStates():
  playable = False
  won = False
  for fila in range(n):
    for columna in range(n):
      if (matriz[fila][columna] == 0):
        playable = True
      if (matriz[fila][columna] == 2048):
        won = True
  
  if not playable:
    for fila in range(n):
      for columna in range(n-1):
        if (matriz[fila][columna] == matriz[fila][columna+1]):
          playable = True

    for columna in range(n):
      for fila in range(n-1):
        if (matriz[fila][columna] == matriz[fila+1][columna]):
          playable = True

  return mensajes(playable, won)

def mensajes(playable, won):
  if not playable:
    return print("game over D:")
  elif won:
    return print(
"""
⠀⠀⠀⠀⠀⠀⢀⣠⠤⠔⠒⠒⠒⠒⠒⠢⠤⢤⣀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⢀⠴⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠲⣄⠀⠀⠀yipee
⠀⠀⡰⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢧⠀⠀
⠀⡸⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢇⠀
⠀⡇⠀⠀⠀⢀⡶⠛⣿⣷⡄⠀⠀⠀⣰⣿⠛⢿⣷⡄⠀⠀⠀⢸⠀
⠀⡇⠀⠀⠀⢸⣷⣶⣿⣿⡇⠀⠀⠀⢻⣿⣶⣿⣿⣿⠀⠀⠀⢸⠀
⠀⡇⠀⠀⠀⠈⠛⠻⠿⠟⠁⠀⠀⠀⠈⠛⠻⠿⠛⠁⠀⠀⠀⢸⠀
⠀⠹⣄⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠏⠀
⠀⠀⠈⠢⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣚⡁⠀⠀
⠀⠀⠀⠀⠈⠙⠒⢢⡤⠤⠤⠤⠤⠤⠖⠒⠒⠋⠉⠉⠀⠀⠉⠉⢦
⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸
⠀⠀⠀⠀⠀⠀⠀⢸⡀⠀⠀⠀⠀⣤⠀⠀⠀⢀⣀⣀⣀⠀⠀⠀⢸
⠀⠀⠀⠀⠀⠀⠀⠈⡇⠀⠀⠀⢠⣿⠀⠀⠀⢸⠀⠀⣿⠀⠀⠀⣸
⠀⠀⠀⠀⠀⠀⠀⠀⢱⠀⠀⠀⢸⠘⡆⠀⠀⢸⣀⡰⠋⣆⠀⣠⠇
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠳⠤⠤⠼⠀⠘⠤⠴⠃⠀⠀⠀⠈⠉⠁⠀
"""
)

"""# `Move value from an old to a new index`"""

def moveThroughRow(fila, old, new, value=0):
  if (value):
    matriz[fila][new] = value
  else:
    matriz[fila][new] = matriz[fila][old]
  matriz[fila][old] = 0

def moveThroughColumn(col, old, new, value=0):
  if (value):
    matriz[new][col] = value
  else:
    matriz[new][col] = matriz[old][col]
  matriz[old][col] = 0

"""# `Código principal`"""

global matriz
global n
matriz = []
n = 4

fill()

while True:
  key = input("wasd, [e]xit, [r]estart: ")
  if (key == "w"):
    clear_output()
    arriba()
  elif (key == "a"):
    clear_output()
    izq()
  elif (key == "s"):
    clear_output()
    abajo()
  elif (key == "d"):
    clear_output()
    der()
  elif (key == "e"):
    break
  elif (key == "r"):
    matriz = []
    clear_output()
    fill()
    
  checkStates()
